// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v6.32.1
// source: proto/signal.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WhaleSignal struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Timestamp     int64                  `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Asset         string                 `protobuf:"bytes,2,opt,name=asset,proto3" json:"asset,omitempty"`
	Direction     string                 `protobuf:"bytes,3,opt,name=direction,proto3" json:"direction,omitempty"`
	SizeUsd       float64                `protobuf:"fixed64,4,opt,name=size_usd,json=sizeUsd,proto3" json:"size_usd,omitempty"`
	Price         float64                `protobuf:"fixed64,5,opt,name=price,proto3" json:"price,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WhaleSignal) Reset() {
	*x = WhaleSignal{}
	mi := &file_proto_signal_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WhaleSignal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhaleSignal) ProtoMessage() {}

func (x *WhaleSignal) ProtoReflect() protoreflect.Message {
	mi := &file_proto_signal_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhaleSignal.ProtoReflect.Descriptor instead.
func (*WhaleSignal) Descriptor() ([]byte, []int) {
	return file_proto_signal_proto_rawDescGZIP(), []int{0}
}

func (x *WhaleSignal) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *WhaleSignal) GetAsset() string {
	if x != nil {
		return x.Asset
	}
	return ""
}

func (x *WhaleSignal) GetDirection() string {
	if x != nil {
		return x.Direction
	}
	return ""
}

func (x *WhaleSignal) GetSizeUsd() float64 {
	if x != nil {
		return x.SizeUsd
	}
	return 0
}

func (x *WhaleSignal) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

type Ack struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Ack) Reset() {
	*x = Ack{}
	mi := &file_proto_signal_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Ack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ack) ProtoMessage() {}

func (x *Ack) ProtoReflect() protoreflect.Message {
	mi := &file_proto_signal_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ack.ProtoReflect.Descriptor instead.
func (*Ack) Descriptor() ([]byte, []int) {
	return file_proto_signal_proto_rawDescGZIP(), []int{1}
}

func (x *Ack) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_proto_signal_proto protoreflect.FileDescriptor

const file_proto_signal_proto_rawDesc = "" +
	"\n" +
	"\x12proto/signal.proto\x12\x05proto\"\x90\x01\n" +
	"\vWhaleSignal\x12\x1c\n" +
	"\ttimestamp\x18\x01 \x01(\x03R\ttimestamp\x12\x14\n" +
	"\x05asset\x18\x02 \x01(\tR\x05asset\x12\x1c\n" +
	"\tdirection\x18\x03 \x01(\tR\tdirection\x12\x19\n" +
	"\bsize_usd\x18\x04 \x01(\x01R\asizeUsd\x12\x14\n" +
	"\x05price\x18\x05 \x01(\x01R\x05price\"\x1f\n" +
	"\x03Ack\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess2=\n" +
	"\vTradeSignal\x12.\n" +
	"\n" +
	"SendSignal\x12\x12.proto.WhaleSignal\x1a\n" +
	".proto.Ack\"\x00B&Z$leviathan/leviathan-wake-pilot/protob\x06proto3"

var (
	file_proto_signal_proto_rawDescOnce sync.Once
	file_proto_signal_proto_rawDescData []byte
)

func file_proto_signal_proto_rawDescGZIP() []byte {
	file_proto_signal_proto_rawDescOnce.Do(func() {
		file_proto_signal_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_signal_proto_rawDesc), len(file_proto_signal_proto_rawDesc)))
	})
	return file_proto_signal_proto_rawDescData
}

var file_proto_signal_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_proto_signal_proto_goTypes = []any{
	(*WhaleSignal)(nil), // 0: proto.WhaleSignal
	(*Ack)(nil),         // 1: proto.Ack
}
var file_proto_signal_proto_depIdxs = []int32{
	0, // 0: proto.TradeSignal.SendSignal:input_type -> proto.WhaleSignal
	1, // 1: proto.TradeSignal.SendSignal:output_type -> proto.Ack
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_signal_proto_init() }
func file_proto_signal_proto_init() {
	if File_proto_signal_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_signal_proto_rawDesc), len(file_proto_signal_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_signal_proto_goTypes,
		DependencyIndexes: file_proto_signal_proto_depIdxs,
		MessageInfos:      file_proto_signal_proto_msgTypes,
	}.Build()
	File_proto_signal_proto = out.File
	file_proto_signal_proto_goTypes = nil
	file_proto_signal_proto_depIdxs = nil
}
